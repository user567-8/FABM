# YOLOv5 🚀 by Ultralytics, AGPL-3.0 license

# Parameters
nc: 1  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50 # layer channel multiple

anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# FasterNet Backbone with CBAM
backbone:
  # [from, number, module, args]
  [[-1, 1, PatchEmbed_FasterNet, [40, 4, 4]],  # 0-P1/4
   [-1, 1, BasicStage, [40, 1]],                # 1
   [-1, 1, PatchMerging_FasterNet, [80, 2, 2]],  # 2-P2/8
   [-1, 2, BasicStage, [80, 1]],                # 3 <- P3 output (80 channels)
   [-1, 1, PatchMerging_FasterNet, [160, 2, 2]], # 4
   [-1, 8, BasicStage, [160, 1]],               # 5 <- P4 output (160 channels)
   [-1, 1, PatchMerging_FasterNet, [320, 2, 2]], # 6
   [-1, 2, BasicStage, [320, 1]],               # 7 (Output: 320 channels)
   # --- CBAM 插入点 ---
   [-1, 1, CBAM, [320]],                        # 8 (Takes 320 channels from layer 7)
   # --- CBAM 结束 ---
   [-1, 1, SPPF, [320, 5]],                     # 9 <- P5 output (320 channels)
  ]

# Head structure adapted for FasterNet outputs
head:
  [[-1, 1, Conv, [512, 1, 1]],                 # 10 (Input from layer 9 - SPPF)
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 11
   [[-1, 5], 1, Concat, [1]],                   # 12 <- Concat backbone P4 (layer 5)
   [-1, 3, C3, [512, False]],                   # 13
   [-1, 1, Conv, [256, 1, 1]],                 # 14
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 15
   [[-1, 3], 1, Concat, [1]],                   # 16 <- Concat backbone P3 (layer 3)
   [-1, 3, C3, [256, False]],                   # 17 (P3/8-small output)
   [-1, 1, Conv, [256, 3, 2]],                 # 18
   [[-1, 14], 1, Concat, [1]],                  # 19 <- Concat head P4 (from layer 14)
   [-1, 3, C3, [512, False]],                   # 20 (P4/16-medium output)
   [-1, 1, Conv, [512, 3, 2]],                 # 21
   [[-1, 10], 1, Concat, [1]],                  # 22 <- Concat head P5 (from layer 10)
   [-1, 3, C3, [1024, False]],                  # 23 (P5/32-large output)

   [[17, 20, 23], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5) - Inputs from layers 17, 20, 23
]